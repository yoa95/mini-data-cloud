server:
  port: 8080

spring:
  application:
    name: minicloud-control-plane
  
  # H2 Database configuration
  datasource:
    url: jdbc:h2:mem:minicloud;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driverClassName: org.h2.Driver
    username: sa
    password: 
  
  # JPA configuration
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  
  # H2 Console (for development)
  h2:
    console:
      enabled: true
      path: /h2-console

# Management and monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# MiniCloud specific configuration
minicloud:
  storage:
    data-directory: ./data
    temp-directory: ./temp
    parquet:
      compression: SNAPPY
      row-group-size: 1048576  # 1MB
      page-size: 1048576       # 1MB
  
  # Docker orchestration configuration
  docker:
    enabled: false  # Disable Docker orchestration when running in containers
    worker-image: minicloud-worker:latest
    network: minicloud-network
    data-volume: ./data
    worker-memory: 2g
    worker-cpu: 1.0
  
  # Control plane endpoint for workers
  control-plane:
    endpoint: control-plane:9090
  
  # Auto-scaling configuration
  autoscaling:
    enabled: true
    min-workers: 1
    max-workers: 5
    scale-up-threshold: 0.8
    scale-down-threshold: 0.3
    cooldown-minutes: 2
    worker-startup-timeout: 120

# gRPC Server configuration
grpc:
  server:
    port: 9090
    enable-reflection: true

# Logging configuration
logging:
  level:
    com.minicloud: INFO
    org.springframework.web: INFO
    io.grpc: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
